Лексический анализатор (лексер) - первая фаза компиляции.

В данной фазе происходит выделение в исходной программе слов (лексем).
У каждой лексемы определяется ее тип – токен (ключевое слово,
идентификатор, и т.д.).

Если лексема не принадлежит языку, т.е. соответствует типу error (тип -
ошибка), то генерируется сообщение об ошибке, иначе лексема с
соответствующим типом предается в следующий блок.

Токены:
Id: 
Integer: целое число (23)
Float: число с плавающей точкой (0.5)
Binary:
Octal:
Decimal:
DecimalFractional:
Keyword: ключевые (зарезервированные) слова
( "if", "else", "while", "for", "read", "write", "return", "and", "or", "int", "void", "main", "string", "char", "float" )
Arithmetic operations: арифметические операции ('+', '-', '*', '/', '=')
Comparisons operator: операторы сравнения ("==", "!=", ">", "<", ">=", "<=")
Logic operator: логические операторы ("&&", "||", "!")
Bracker: скобки ( '{', '}', '(', ')' )
Separator: разделители ( ':', ',', ';')
Comment: комментарии ("//", "/*", "*/")
Array: массив ([...])
String: строка ("....")
Char: символ ('...')
Error: ошибка (неизвестный токен)

Вход: некоторый программный код
Выход: список токенов программного кода в формате: Тип токена ' ' значение ' ' номер строки ' ' позиция в строке

Пример:
вход:
int binary = 0b1101001;

выход: 
Keyword int 0 0
Id binary 0 4
Arithmetic operation = 0 11
Binary 0b1101001 0 13
Separator ; 0 22

